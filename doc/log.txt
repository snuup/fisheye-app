9.7.
- software engineering - clean code
-  lavinia
+ red path
- need flooding

8.7.
- colorize red bads in path matrix
- lavinia
- flood
- networkx ?

7.7.
+ mark the invs
+ vessels icon
- how all vessels related -> lists with path lengths
- put all navs into the model
- lavinia data, names
- search for vessels

6.7.
// most essential improvements
+ link strength
+ node visuals into
- path matrix into node

5.7.
- include all crime nodes
- drag in force
- nice names, more important: mark bad nodes, so intermediate are gray and targets are red
- allow color setting of nodes
- include node-donut in force
- already connected are marked in path matrix
- precompute distance of all crime-nodes to investigatees and sort them
- colorize: crime-nodes / investigatees / inter
- path matrix: exclude inter
- precompute path matrix
- bug: path matrix does not update view
- colorize node types !!!

- restore *pinned nodes and *selected paths

wow: circle with distances for each on hover

4.7.
- fishnode: set degrees

3.7.
+ networkx
+ fx path algorithm, to show all simple paths
. add links on click on path matrix



design for link add:
  ref counted links
  displaylinks = links with refount
  toggle-matrix


2.7.
- path matrix

1.7.
- select nodes for netgraph
  - list in nav, selectable -> update network on (un)check
- show path matrix for those nodes


29.6.
- colors
- chord diagrams


25.6.
- add nodes that are flooded
27.6.

4 invs
focus partnership

mar de la vida

scopen: link type
        in - out

plan:
. more summary stats:
  - all types of links:
- matrix view expand (weights, link types in cell)
- treeview - filtering, lin colors, ev separate path lengths




24.4.
+ link forces
+ start with subgraph of 4 invs
+ seagraph



20.6.
. create hierarchy from subgraph

d3.group(m.graphfocusnode.investigatePaths, x => x[0].links[0].sid)

m.graphfocusnode.investigatePaths.flatMap((paths, i) => ({paths, i}))
ipath : { paths: Array(26), i: 0 }

ipaths.paths.map((p, j) => ({ p, j, i }))

ijpath:

------

- d3 inspiration
- visualize Amanda Mckenzie
- compute weights with kirchhoff, score
- collect literature
- chord diagram that shows which relations exist between the investigatees


19.6.
- add a enw route for matrix
- for route graph/nid
    show the subgraph of nix + investigatees + illegal

color links first



// 2d vs 3d:

nodes are in the hole | on the watersurface

for nodes in the hole compute:
- gravity down                              // (equal weight for each node, hard to see how we could weight it otherwise)
- lift = force up = blow them with air

once a nodes uplift > gravity -> node is at watersurface
actually can assign each node a function that evaluates surface | hole
